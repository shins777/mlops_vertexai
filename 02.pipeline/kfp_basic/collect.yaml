# PIPELINE DEFINITION
# Name: collect
# Inputs:
#    original: str
#    tran_output_1: str
#    tran_output_2: str
# Outputs:
#    Output: str
components:
  comp-collect:
    executorLabel: exec-collect
    inputDefinitions:
      parameters:
        original:
          parameterType: STRING
        tran_output_1:
          parameterType: STRING
        tran_output_2:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-collect:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - collect
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.5.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef collect(original: str, tran_output_1: str, tran_output_2: str)\
          \ -> str:\n\n    import logging\n\n    logger = logging.getLogger()\n  \
          \  output = f\"original: {original}; translation_1: {tran_output_1}; translation_2:\
          \ {tran_output_2}\"\n\n    logger.info(f\"### original: {original}\")\n\
          \    logger.info(f\"### tran_output_1: {tran_output_1}\")\n    logger.info(f\"\
          ### translation_2: {tran_output_2}\")\n\n    return output\n\n"
        image: python:3.10
pipelineInfo:
  name: collect
root:
  dag:
    outputs:
      parameters:
        Output:
          valueFromParameter:
            outputParameterKey: Output
            producerSubtask: collect
    tasks:
      collect:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-collect
        inputs:
          parameters:
            original:
              componentInputParameter: original
            tran_output_1:
              componentInputParameter: tran_output_1
            tran_output_2:
              componentInputParameter: tran_output_2
        taskInfo:
          name: collect
  inputDefinitions:
    parameters:
      original:
        parameterType: STRING
      tran_output_1:
        parameterType: STRING
      tran_output_2:
        parameterType: STRING
  outputDefinitions:
    parameters:
      Output:
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.5.0
